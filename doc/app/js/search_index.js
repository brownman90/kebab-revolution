var search_data = {"index":{"searchIndex":["application","applicationcontroller","feedbackcontroller","pagescontroller","passwordscontroller","paypal","recurring","base","notification","request","response","base","checkout","details","manageprofile","payment","profile","utils","version","payment","plan","privilege","resource","role","sessionscontroller","subscription","tenant","tenantmailer","tenantscopedmodel","tenantscontroller","user","usermailer","userscontroller","acl()","active?()","add_error()","add_notice()","agreed?()","api_endpoint()","api_version()","approved?()","authenticate()","authorize()","bootstrap()","build_default_scope()","cancel()","checkout()","checkout_details()","checkout_url()","client()","completed?()","completed?()","configure()","convert_to_time()","create()","create()","create()","create()","create_recurring_profile()","create_tenant()","current()","current=()","default_params()","desktop()","destroy()","endpoints()","environment()","errors()","express_checkout?()","forget_password()","get_applications()","get_privileges()","get_profile()","get_resources()","i18n_locale()","i18n_locale_from_param()","i18n_locale_from_session()","index()","login()","login()","logout()","mapping()","new()","new()","new()","new()","next_payment_date()","normalize_params()","paid_at()","params()","params=()","paypal_credential()","paypal_recurring_payment()","plans()","post()","process()","profile()","reactivate()","recurring_payment?()","recurring_payment_profile?()","register()","request()","request()","request_payment()","response()","run()","sandbox?()","send_feedback()","site_endpoint()","success?()","suspend()","tenant()","update()","update_profile()","valid?()","valid?()","valid_host()","verified?()","with()","with_tenant()","readme_for_app"],"longSearchIndex":["application","applicationcontroller","feedbackcontroller","pagescontroller","passwordscontroller","paypal","paypal::recurring","paypal::recurring::base","paypal::recurring::notification","paypal::recurring::request","paypal::recurring::response","paypal::recurring::response::base","paypal::recurring::response::checkout","paypal::recurring::response::details","paypal::recurring::response::manageprofile","paypal::recurring::response::payment","paypal::recurring::response::profile","paypal::recurring::utils","paypal::recurring::version","payment","plan","privilege","resource","role","sessionscontroller","subscription","tenant","tenantmailer","tenantscopedmodel","tenantscontroller","user","usermailer","userscontroller","applicationcontroller#acl()","paypal::recurring::response::profile#active?()","applicationcontroller#add_error()","applicationcontroller#add_notice()","paypal::recurring::response::details#agreed?()","paypal::recurring::api_endpoint()","paypal::recurring::api_version()","paypal::recurring::response::payment#approved?()","applicationcontroller#authenticate()","applicationcontroller#authorize()","applicationcontroller#bootstrap()","tenantscopedmodel::build_default_scope()","paypal::recurring::base#cancel()","paypal::recurring::base#checkout()","paypal::recurring::base#checkout_details()","paypal::recurring::response::checkout#checkout_url()","paypal::recurring::request#client()","paypal::recurring::notification#completed?()","paypal::recurring::response::payment#completed?()","paypal::recurring::configure()","paypal::recurring::utils#convert_to_time()","feedbackcontroller#create()","passwordscontroller#create()","sessionscontroller#create()","tenantscontroller#create()","paypal::recurring::base#create_recurring_profile()","tenantmailer#create_tenant()","tenant::current()","tenant::current=()","paypal::recurring::request#default_params()","pagescontroller#desktop()","sessionscontroller#destroy()","paypal::recurring::endpoints()","paypal::recurring::environment()","paypal::recurring::response::base#errors()","paypal::recurring::notification#express_checkout?()","usermailer#forget_password()","user#get_applications()","user#get_privileges()","userscontroller#get_profile()","user#get_resources()","applicationcontroller#i18n_locale()","applicationcontroller#i18n_locale_from_param()","applicationcontroller#i18n_locale_from_session()","pagescontroller#index()","applicationcontroller#login()","pagescontroller#login()","applicationcontroller#logout()","paypal::recurring::utils#mapping()","paypal::recurring::new()","paypal::recurring::base::new()","paypal::recurring::notification::new()","paypal::recurring::response::base::new()","paypal::recurring::notification#next_payment_date()","paypal::recurring::request#normalize_params()","paypal::recurring::notification#paid_at()","paypal::recurring::response::base#params()","paypal::recurring::notification#params=()","applicationcontroller#paypal_credential()","applicationcontroller#paypal_recurring_payment()","pagescontroller#plans()","paypal::recurring::request#post()","paypal::recurring::response::process()","paypal::recurring::base#profile()","paypal::recurring::base#reactivate()","paypal::recurring::notification#recurring_payment?()","paypal::recurring::notification#recurring_payment_profile?()","pagescontroller#register()","paypal::recurring::notification#request()","paypal::recurring::request#request()","paypal::recurring::base#request_payment()","paypal::recurring::notification#response()","paypal::recurring::request#run()","paypal::recurring::sandbox?()","usermailer#send_feedback()","paypal::recurring::site_endpoint()","paypal::recurring::response::base#success?()","paypal::recurring::base#suspend()","applicationcontroller#tenant()","passwordscontroller#update()","userscontroller#update_profile()","paypal::recurring::notification#valid?()","paypal::recurring::response::base#valid?()","tenantscontroller#valid_host()","paypal::recurring::notification#verified?()","tenant#with()","applicationcontroller#with_tenant()",""],"info":[["Application","","Application.html","","<p>App Model\n"],["ApplicationController","","ApplicationController.html","","<p>Application Controller\n"],["FeedbackController","","FeedbackController.html","","<p>FeedbackController\n"],["PagesController","","PagesController.html","","<p>Pages Controller\n"],["PasswordsController","","PasswordsController.html","","<p>Password Controller\n"],["PayPal","","PayPal.html","",""],["PayPal::Recurring","","PayPal/Recurring.html","",""],["PayPal::Recurring::Base","","PayPal/Recurring/Base.html","",""],["PayPal::Recurring::Notification","","PayPal/Recurring/Notification.html","",""],["PayPal::Recurring::Request","","PayPal/Recurring/Request.html","",""],["PayPal::Recurring::Response","","PayPal/Recurring/Response.html","",""],["PayPal::Recurring::Response::Base","","PayPal/Recurring/Response/Base.html","",""],["PayPal::Recurring::Response::Checkout","","PayPal/Recurring/Response/Checkout.html","",""],["PayPal::Recurring::Response::Details","","PayPal/Recurring/Response/Details.html","",""],["PayPal::Recurring::Response::ManageProfile","","PayPal/Recurring/Response/ManageProfile.html","",""],["PayPal::Recurring::Response::Payment","","PayPal/Recurring/Response/Payment.html","",""],["PayPal::Recurring::Response::Profile","","PayPal/Recurring/Response/Profile.html","",""],["PayPal::Recurring::Utils","","PayPal/Recurring/Utils.html","",""],["PayPal::Recurring::Version","","PayPal/Recurring/Version.html","",""],["Payment","","Payment.html","","<p>Payment Model\n"],["Plan","","Plan.html","","<p>Subscription Plan Model\n"],["Privilege","","Privilege.html","","<p>Privilege Model\n"],["Resource","","Resource.html","","<p>Resource Model\n"],["Role","","Role.html","","<p>Role Model\n"],["SessionsController","","SessionsController.html","","<p>Sessions Controller\n"],["Subscription","","Subscription.html","","<p>Subscription Model\n"],["Tenant","","Tenant.html","","<p>Tenant Model\n"],["TenantMailer","","TenantMailer.html","","<p>Tenant Mailer\n"],["TenantScopedModel","","TenantScopedModel.html","","<p>Tenant Scope Model\n<p>TenantScopedModel manages all multi tenant system for more information see\nthe Samuek …\n"],["TenantsController","","TenantsController.html","","<p>Tenants Controller\n"],["User","","User.html","","<p>User Model\n"],["UserMailer","","UserMailer.html","","<p>User Mailer\n"],["UsersController","","UsersController.html","","<p>Users Controller\n"],["acl","ApplicationController","ApplicationController.html#method-i-acl","()","<p>Protected: Return users acl hash\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">acl</span>\n<span class=\"ruby-comment\">#=&gt; {</span>\n<span class=\"ruby-comment\">#=&gt;  'POST/sessions'    =&gt; 'sessions/create',</span>\n<span class=\"ruby-comment\">#=&gt;  ...</span>\n</pre>\n"],["active?","PayPal::Recurring::Response::Profile","PayPal/Recurring/Response/Profile.html#method-i-active-3F","()",""],["add_error","ApplicationController","ApplicationController.html#method-i-add_error","(id, message)","<p>Protected: Add an error at @@response\n<p>id      - String - Form element id where error is showed message …\n"],["add_notice","ApplicationController","ApplicationController.html#method-i-add_notice","(type, message)","<p>Protected: Add a notice at @@response\n<p>type    - String - Message type like ERROR, INFO, NOTICE message …\n"],["agreed?","PayPal::Recurring::Response::Details","PayPal/Recurring/Response/Details.html#method-i-agreed-3F","()",""],["api_endpoint","PayPal::Recurring","PayPal/Recurring.html#method-c-api_endpoint","()","<p>Return API endpoint based on current environment.\n"],["api_version","PayPal::Recurring","PayPal/Recurring.html#method-c-api_version","()","<p>Return PayPal’s API version.\n"],["approved?","PayPal::Recurring::Response::Payment","PayPal/Recurring/Response/Payment.html#method-i-approved-3F","()",""],["authenticate","ApplicationController","ApplicationController.html#method-i-authenticate","()","<p>Protected: Check user authentication\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">authenticate</span>\n<span class=\"ruby-comment\"># =&gt; {success: false} # status 403 unless there ...</span>\n</pre>\n"],["authorize","ApplicationController","ApplicationController.html#method-i-authorize","()","<p>Protected: Check user authorize\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">authorize</span>\n<span class=\"ruby-comment\"># =&gt; {success: false} # status 401</span>\n<span class=\"ruby-comment\"># =&gt; nil</span>\n</pre>\n"],["bootstrap","ApplicationController","ApplicationController.html#method-i-bootstrap","(tenant = true)","<p>Protected: bootstrap\n"],["build_default_scope","TenantScopedModel","TenantScopedModel.html#method-c-build_default_scope","()","<p>Public Static: Built default scope\n"],["cancel","PayPal::Recurring::Base","PayPal/Recurring/Base.html#method-i-cancel","()","<p>Cancel a recurring profile. Cancelled profiles cannot be reactivated.\n\n<pre>ppr = PayPal::Recurring.new(:profile_id ...</pre>\n"],["checkout","PayPal::Recurring::Base","PayPal/Recurring/Base.html#method-i-checkout","()","<p>Request a checkout token.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">ppr</span> = <span class=\"ruby-constant\">PayPal</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Recurring</span>.<span class=\"ruby-identifier\">new</span>({\n  :<span class=\"ruby-identifier\">return_url</span>         =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;http://example.com/checkout/thank_you&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n"],["checkout_details","PayPal::Recurring::Base","PayPal/Recurring/Base.html#method-i-checkout_details","()","<p>Return checkout details.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">ppr</span> = <span class=\"ruby-constant\">PayPal</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Recurring</span>.<span class=\"ruby-identifier\">new</span>(:<span class=\"ruby-identifier\">token</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;EC-6LX60229XS426623E&quot;</span>)\n<span class=\"ruby-identifier\">response</span> = <span class=\"ruby-identifier\">ppr</span>.<span class=\"ruby-identifier\">checkout_details</span>\n</pre>\n"],["checkout_url","PayPal::Recurring::Response::Checkout","PayPal/Recurring/Response/Checkout.html#method-i-checkout_url","()",""],["client","PayPal::Recurring::Request","PayPal/Recurring/Request.html#method-i-client","()",""],["completed?","PayPal::Recurring::Notification","PayPal/Recurring/Notification.html#method-i-completed-3F","()",""],["completed?","PayPal::Recurring::Response::Payment","PayPal/Recurring/Response/Payment.html#method-i-completed-3F","()",""],["configure","PayPal::Recurring","PayPal/Recurring.html#method-c-configure","(&block)","<p>Configure PayPal::Recurring options.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">PayPal</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Recurring</span>.<span class=\"ruby-identifier\">configure</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">config</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">config</span>.<span class=\"ruby-identifier\">sandbox</span> = <span class=\"ruby-keyword\">true</span>\n<span class=\"ruby-keyword\">end</span>\n</pre>\n"],["convert_to_time","PayPal::Recurring::Utils","PayPal/Recurring/Utils.html#method-i-convert_to_time","(string)",""],["create","FeedbackController","FeedbackController.html#method-i-create","()","<p>POST/feedback\n"],["create","PasswordsController","PasswordsController.html#method-i-create","()","<p>POST/passwords KBBTODO send activation for forget password\n"],["create","SessionsController","SessionsController.html#method-i-create","()","<p>POST/sessions\n"],["create","TenantsController","TenantsController.html#method-i-create","()","<p>POST/tenants KBBTODO move all delete code to tenants#delete private method\n"],["create_recurring_profile","PayPal::Recurring::Base","PayPal/Recurring/Base.html#method-i-create_recurring_profile","()","<p>Create a recurring billing profile.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">ppr</span> = <span class=\"ruby-constant\">PayPal</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Recurring</span>.<span class=\"ruby-identifier\">new</span>({\n  :<span class=\"ruby-identifier\">amount</span>                =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;9.00&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n"],["create_tenant","TenantMailer","TenantMailer.html#method-i-create_tenant","(user, tenant, subscription)","<p>Public: Create new tenant mail\n<p>tenant        - tenant object instance of TenantModel user          - user\n…\n"],["current","Tenant","Tenant.html#method-c-current","()","<p>Public: Return current tenant\n"],["current=","Tenant","Tenant.html#method-c-current-3D","(tenant)","<p>Public: Set current tenant\n"],["default_params","PayPal::Recurring::Request","PayPal/Recurring/Request.html#method-i-default_params","()",""],["desktop","PagesController","PagesController.html#method-i-desktop","()","<p>GET/pages/desktop\n"],["destroy","SessionsController","SessionsController.html#method-i-destroy","()","<p>DELETE/sessions\n"],["endpoints","PayPal::Recurring","PayPal/Recurring.html#method-c-endpoints","()","<p>Return URL endpoints for current environment.\n"],["environment","PayPal::Recurring","PayPal/Recurring.html#method-c-environment","()","<p>Return a name for current environment mode (sandbox or production).\n"],["errors","PayPal::Recurring::Response::Base","PayPal/Recurring/Response/Base.html#method-i-errors","()",""],["express_checkout?","PayPal::Recurring::Notification","PayPal/Recurring/Notification.html#method-i-express_checkout-3F","()",""],["forget_password","UserMailer","UserMailer.html#method-i-forget_password","(user)","<p>Public: Send forget password mail\n<p>user - user object instance of UserModel\n"],["get_applications","User","User.html#method-i-get_applications","()","<p>Public: Return users apps hash KBBTODO refactor methods in loop\n"],["get_privileges","User","User.html#method-i-get_privileges","()","<p>Pubic: Return users privileges hash KBBTODO refactor methods in loop\n"],["get_profile","UsersController","UsersController.html#method-i-get_profile","()","<p>GET/users/get_profile\n"],["get_resources","User","User.html#method-i-get_resources","()","<p>Public: Return users resources hash KBBTODO refactor methods in loop\n"],["i18n_locale","ApplicationController","ApplicationController.html#method-i-i18n_locale","()","<p>Protected: Set locale\n<p>First check params, then session, then default value at config file.\n<p>Examples\n"],["i18n_locale_from_param","ApplicationController","ApplicationController.html#method-i-i18n_locale_from_param","()","<p>Protected: Return locale value from param if exist\n<p>Returns String\n"],["i18n_locale_from_session","ApplicationController","ApplicationController.html#method-i-i18n_locale_from_session","()","<p>Protected: Return locale value from session if exist\n<p>Returns String\n"],["index","PagesController","PagesController.html#method-i-index","()","<p>GET/pages/index\n"],["login","ApplicationController","ApplicationController.html#method-i-login","(user, password)","<p>Protected: login\n<p>user      UserModel password  String\n<p>Return boolean\n"],["login","PagesController","PagesController.html#method-i-login","()","<p>GET/pages/login\n"],["logout","ApplicationController","ApplicationController.html#method-i-logout","()","<p>Protected: logout\n"],["mapping","PayPal::Recurring::Utils","PayPal/Recurring/Utils.html#method-i-mapping","(options = {})",""],["new","PayPal::Recurring","PayPal/Recurring.html#method-c-new","(options = {})","<p>Just a shortcut for <code>PayPal::Recurring::Base.new</code>.\n"],["new","PayPal::Recurring::Base","PayPal/Recurring/Base.html#method-c-new","(options = {})",""],["new","PayPal::Recurring::Notification","PayPal/Recurring/Notification.html#method-c-new","(params = {})",""],["new","PayPal::Recurring::Response::Base","PayPal/Recurring/Response/Base.html#method-c-new","(response = nil)",""],["next_payment_date","PayPal::Recurring::Notification","PayPal/Recurring/Notification.html#method-i-next_payment_date","()",""],["normalize_params","PayPal::Recurring::Request","PayPal/Recurring/Request.html#method-i-normalize_params","(params)",""],["paid_at","PayPal::Recurring::Notification","PayPal/Recurring/Notification.html#method-i-paid_at","()",""],["params","PayPal::Recurring::Response::Base","PayPal/Recurring/Response/Base.html#method-i-params","()",""],["params=","PayPal::Recurring::Notification","PayPal/Recurring/Notification.html#method-i-params-3D","(params)",""],["paypal_credential","ApplicationController","ApplicationController.html#method-i-paypal_credential","(plan)","<p>Protected: Create a credentials\n"],["paypal_recurring_payment","ApplicationController","ApplicationController.html#method-i-paypal_recurring_payment","(plan, reference, payer_id, token)","<p>Protected: Create a recurring payment\n<p>Return Recurring ProfileId\n"],["plans","PagesController","PagesController.html#method-i-plans","()","<p>GET/pages/plans\n"],["post","PayPal::Recurring::Request","PayPal/Recurring/Request.html#method-i-post","(params = {})",""],["process","PayPal::Recurring::Response","PayPal/Recurring/Response.html#method-c-process","(method, response)",""],["profile","PayPal::Recurring::Base","PayPal/Recurring/Base.html#method-i-profile","()","<p>Retrieve information about existing recurring profile.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">ppr</span> = <span class=\"ruby-constant\">PayPal</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Recurring</span>.<span class=\"ruby-identifier\">new</span>(:<span class=\"ruby-identifier\">profile_id</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;I-VCEL6TRG35CU&quot;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["reactivate","PayPal::Recurring::Base","PayPal/Recurring/Base.html#method-i-reactivate","()","<p>Reactivate a suspended recurring profile.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">ppr</span> = <span class=\"ruby-constant\">PayPal</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Recurring</span>.<span class=\"ruby-identifier\">new</span>(:<span class=\"ruby-identifier\">profile_id</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;I-HYRKXBMNLFSK&quot;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["recurring_payment?","PayPal::Recurring::Notification","PayPal/Recurring/Notification.html#method-i-recurring_payment-3F","()",""],["recurring_payment_profile?","PayPal::Recurring::Notification","PayPal/Recurring/Notification.html#method-i-recurring_payment_profile-3F","()",""],["register","PagesController","PagesController.html#method-i-register","()","<p>GET/pages/register\n"],["request","PayPal::Recurring::Notification","PayPal/Recurring/Notification.html#method-i-request","()",""],["request","PayPal::Recurring::Request","PayPal/Recurring/Request.html#method-i-request","()",""],["request_payment","PayPal::Recurring::Base","PayPal/Recurring/Base.html#method-i-request_payment","()","<p>Request payment.\n\n<pre class=\"ruby\"><span class=\"ruby-comment\"># ppr = PayPal::Recurring.new({</span>\n  :<span class=\"ruby-identifier\">token</span>       =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;EC-6LX60229XS426623E&quot;</span>,\n  :<span class=\"ruby-identifier\">payer_id</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["response","PayPal::Recurring::Notification","PayPal/Recurring/Notification.html#method-i-response","()",""],["run","PayPal::Recurring::Request","PayPal/Recurring/Request.html#method-i-run","(method, params = {})","<p>Do a POST request to PayPal API. The <code>method</code> argument is the\nname of the API method you want to invoke. …\n"],["sandbox?","PayPal::Recurring","PayPal/Recurring.html#method-c-sandbox-3F","()","<p>Detect if sandbox mode is enabled.\n"],["send_feedback","UserMailer","UserMailer.html#method-i-send_feedback","(user, subject, message)","<p>Public: Send feedback\n<p>subject - string body    - text user    - object - User Model\n"],["site_endpoint","PayPal::Recurring","PayPal/Recurring.html#method-c-site_endpoint","()","<p>Return site endpoint based on current environment.\n"],["success?","PayPal::Recurring::Response::Base","PayPal/Recurring/Response/Base.html#method-i-success-3F","()",""],["suspend","PayPal::Recurring::Base","PayPal/Recurring/Base.html#method-i-suspend","()","<p>Suspend a recurring profile. Suspended profiles can be reactivated.\n\n<pre>ppr = PayPal::Recurring.new(:profile_id ...</pre>\n"],["tenant","ApplicationController","ApplicationController.html#method-i-tenant","()","<p>Protected: Check current tenant\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tenant</span>\n<span class=\"ruby-comment\"># =&gt; {success: false, notice: 'Invalid tenant'} #status ...</span>\n</pre>\n"],["update","PasswordsController","PasswordsController.html#method-i-update","()","<p>PUT/passwords\n"],["update_profile","UsersController","UsersController.html#method-i-update_profile","()","<p>POST/users/update_profile\n"],["valid?","PayPal::Recurring::Notification","PayPal/Recurring/Notification.html#method-i-valid-3F","()",""],["valid?","PayPal::Recurring::Response::Base","PayPal/Recurring/Response/Base.html#method-i-valid-3F","()",""],["valid_host","TenantsController","TenantsController.html#method-i-valid_host","()","<p>GET/tenants/valid_host?host=host_name KBBTODO set invalid tenant from one\nplace\n"],["verified?","PayPal::Recurring::Notification","PayPal/Recurring/Notification.html#method-i-verified-3F","()",""],["with","Tenant","Tenant.html#method-i-with","()",""],["with_tenant","ApplicationController","ApplicationController.html#method-i-with_tenant","()",""],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Kebab 2.x - Server Ror\n<p>Links\n<p>Web Site -(www.kebab-project.com)\n"]]}}